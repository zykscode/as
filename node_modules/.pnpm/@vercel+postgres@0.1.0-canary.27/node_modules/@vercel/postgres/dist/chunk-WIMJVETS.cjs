"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _nullishCoalesce(lhs, rhsFn) { if (lhs != null) { return lhs; } else { return rhsFn(); } }var _serverless = require('@neondatabase/serverless');var n=class extends Error{constructor(r,o){super(`VercelPostgresError - '${r}': ${o}`);this.code=r;this.name="VercelPostgresError"}};function s(e="pool"){let t;switch(e){case"pool":{t=process.env.POSTGRES_URL;break}case"direct":{t=process.env.POSTGRES_URL_NON_POOLING;break}default:{let o=e;throw new n("invalid_connection_type",`Unhandled type: ${o}`)}}return t==="undefined"&&(t=void 0),t}function p(e){return e.includes("-pooler.")}function u(e){return!p(e)}function i(e,...t){let r="";for(let o=0;o<e.length;o++)r+=e[o],o<t.length&&(r+=`$${o+1}`);return[r,t]}var c=class extends _serverless.Client{async sql(t,...r){let[o,l]=i(t,...r);return this.query(o,l)}};function C(e){let t=_nullishCoalesce((e==null?void 0:e.connectionString), () => (s("direct")));if(!t)throw new n("missing_connection_string","You did not supply a 'connectionString' and no 'POSTGRES_URL_NON_POOLING' env var was found.");if(!u(t))throw new n("invalid_connection_string","This connection string is meant to be used with a pooled connection. Try `createPool()` instead.");return new c({...e,connectionString:t})}var m=class extends _serverless.Pool{async sql(t,...r){let[o,l]=i(t,...r);return this.query(o,l)}};function d(e){let t=_nullishCoalesce((e==null?void 0:e.connectionString), () => (s("pool")));if(!t)throw new n("missing_connection_string","You did not supply a 'connectionString' and no 'POSTGRES_URL' env var was found.");if(!p(t))throw new n("invalid_connection_string","This connection string is meant to be used with a direct connection. Make sure to use a pooled connection string or try `createClient()` instead.");let r=e==null?void 0:e.maxUses;return typeof EdgeRuntime<"u"&&(r=1),new m({...e,connectionString:t,maxUses:r})}var a;function U(e,...t){a===void 0&&(a=d());let[r,o]=i(e,...t);return a.query(r,o)}exports.a = s; exports.b = c; exports.c = C; exports.d = m; exports.e = d; exports.f = U;
