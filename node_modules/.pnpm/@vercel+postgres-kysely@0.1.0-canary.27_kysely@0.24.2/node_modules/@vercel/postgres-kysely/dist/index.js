import{PostgresDialect as c,PostgresDriver as p,Kysely as l}from"kysely";import{createPool as y}from"@vercel/postgres";var e=class extends Error{constructor(o,t){super(`VercelPostgresError - '${o}': ${t}`);this.code=o;this.name="VercelPostgresError"}};var i=class extends c{constructor(o){super(o);this.config=o}createDriver(){return new a(this.config)}},a=class extends p{async acquireConnection(){let n=await super.acquireConnection();return new Proxy(n,{get(o,t){let s=o[t];if(t==="streamQuery"&&typeof s=="function")throw new e("kysely_streaming_not_supported","Streaming is not supported yet.");return typeof s=="function"?s.bind(o):s}})}beginTransaction(){throw new e("kysely_transactions_not_supported","Transactions are not supported yet.")}commitTransaction(){throw new e("kysely_transactions_not_supported","Transactions are not supported yet.")}rollbackTransaction(){throw new e("kysely_transactions_not_supported","Transactions are not supported yet.")}};function f(r){return new l({dialect:new i({...r,pool:y(r)})})}export{f as createKysely};
